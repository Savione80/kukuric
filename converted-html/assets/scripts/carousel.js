// Generated by CoffeeScript 1.8.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window.Carousel = (function() {
    function Carousel(ref) {
      this.ref = ref;
      this.onResize = __bind(this.onResize, this);
      this.checkCarousel = __bind(this.checkCarousel, this);
      this.moveCarousel = __bind(this.moveCarousel, this);
      this.initCarousel = __bind(this.initCarousel, this);
      this.margin = 24;
      this.num = 3;
      this.CarouselIndex = 0;
      this.carousel_ref = this.ref.find('.row--sliderAux');
      this.carousel = this.carousel_ref.find('ul');
      this.carousel_item = this.carousel_ref.find('.js-carousel__item');
      this.totalItems = this.carousel_item.length;
      this.nextCarousel = this.ref.find('.sliderNav .next');
      this.prevCarousel = this.ref.find('.sliderNav .previous');
      this.IE = window.helpers.detectIE8();
      this.checkCarousel();
      this.initCarousel();
      $(window).resize(this.onResize);
      this.onResize();
    }

    Carousel.prototype.initCarousel = function() {
      this.nextCarousel.click((function(_this) {
        return function(e) {
          e.preventDefault();
          if (_this.CarouselIndex < _this.totalItems - 1) {
            _this.CarouselIndex = _this.CarouselIndex + 1;
            return _this.moveCarousel();
          }
        };
      })(this));
      return this.prevCarousel.click((function(_this) {
        return function(e) {
          e.preventDefault();
          if (_this.CarouselIndex > 0) {
            _this.CarouselIndex = _this.CarouselIndex - 1;
            return _this.moveCarousel();
          }
        };
      })(this));
    };

    Carousel.prototype.moveCarousel = function() {
      var _target;
      _target = (this.carousel_item_width + this.margin) * this.CarouselIndex;
      if (this.lastPosition > _target) {
        this.carousel_item.addClass("reverse");
      } else {
        this.carousel_item.removeClass("reverse");
      }
      if (this.IE) {
        this.carousel_item.css({
          "left": "" + (+(-1) * _target) + "px"
        });
      } else {
        if (window.prefixedTransform != null) {
          this.carousel_item.css("" + prefixedTransform, "translateX(" + -1 * _target + "px)");
        }
      }
      this.lastPosition = _target;
      return this.checkCarousel();
    };

    Carousel.prototype.checkCarousel = function() {
      if (this.CarouselIndex === this.totalItems - this.num) {
        this.nextCarousel.hide();
      } else {
        this.nextCarousel.show();
      }
      if (this.CarouselIndex === 0) {
        return this.prevCarousel.hide();
      } else {
        return this.prevCarousel.show();
      }
    };

    Carousel.prototype.onResize = function() {
      this.carousel_item_width = Math.round((this.carousel_ref.width() - (this.margin * 2)) / this.num);
      this.carousel_item.css({
        'width': "" + this.carousel_item_width + "px"
      });
      return this.carousel.css({
        'width': "" + ((this.carousel_item_width + this.margin) * this.totalItems) + "px"
      });
    };

    return Carousel;

  })();

}).call(this);
